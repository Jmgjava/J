======================================
변수: 하나의 데이터(자료)를 저장할수 있는 메모리 공간
======================================
자바의 자료형

1.기본자료형(타입)-> Primitive Type  *** 하나의 값만 변수에 대입

	1	2	4	8
정수형	byte	short	int	long	*** 10 -> int
실수형			float	double      ***  1.1 -> double
문자형		char
논리형	boolean

2. 객체형(Object) 변수 -> 생성된 객체의 주소값을 저장
String, class(제공라이브러리,사용자정의) , interface, 배열

new 객체();// 객체를 생성(메모리에 할당-> 주소값이 생성)

클래스  변수(객체참조변수)=new 객체();
======================================


*변수의 종류 -> 클래스 수업 정리
1. 인스턴스 멤버(변수)  -> 클래스 내
2. 클래스 멤버(변수)     ->  static
3. 지역 변수	-> 매서드안에 
4. 매개(인자형) 변수: 메소드 선언할 때 괄호 안에 들어감 (지역변수)
5. 객체참조 변수: 객체의 주소값을 저장  ******



"리터럴" -> 있는 그대로의 값
"문자열1"
10
'a'


타입 변수=값;
int i=10
char ch='a';
String str1=new String(), "


*상수: 수식에서 변하지 않는 값 -> const
- 선언: final 상수타입 상수명;	ex) final int MAN;
- 명명: 대문자만, 여러 단어로 이루어진 경우 단어 사이를 _로 구분
- 사용하는 경우: 변하지 않는 값, 의미 있는 값

- 리터럴 상수	int num=10;	10=100; 안됨
- 파이널 상수: 한 번만 초기화, 대문자로 씀, static과 함께 사용

//  static -> 공유 , 공동관리
public static final String PROJECT_NAME="Java Project 2023"

*참조형(new): 힙(heap) -> 스택 (객체 참조 변수)



int i=10;// 4
byte b=10;// 1



================================================
*** 형변환(Type cating)
*같은 자료형끼리의 연산 결과는 같은 자료형
- int*int = int
- double*double = double
- int*double = double: double형이 더 크므로 자동 형변환(auto casting)

*타입 변환과 자동 타입 변환
- 타입 변환: 한 타입의 값을 다른 타입의 값으로 변환
- 자동 타입 변환: 컴파일러에 의해 원래의 타입보다 큰 타입으로 자동 변환    double i=10+1.1;
	작은형+큰형-> 큰형+큰형  -> int/double
	        치환문(=)이나 수식 내에서 타입이 일치하지 않을 때
*int형 아래 연산 시 자동으로 int형으로 형변환 (short, byte, char, boolean)   byte(10)+10

*강제 형변환(명시적 형변환): 프로그래머가 강제로 함
- (변환될 자료형) data	ex) int i=10;
			    byte b = (byte) i;	-> 데이터 손실
================================================



